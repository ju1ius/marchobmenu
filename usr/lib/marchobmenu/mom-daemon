#! /bin/bash

MENU_NAME="mom-applications"

if [[ -n $1 ]] ; then ACTION=$1 ; else ACTION="usage" ; fi

set -e
set -u

#############################################
#		MAIN VARIABLES
#--------------------------------------------
# Get proper paths and names
APP_PATH=$(readlink -f $0)
APP_DIR=$(dirname $APP_PATH)
APP_DAEMON=$(basename $APP_PATH)

MENU_FILE="/etc/xdg/menus/$MENU_NAME.menu"
if [[ ! -f $MENU_FILE ]]
then
  echo ">>> Error: Menu file not found ! ($MENU_FILE)"
  exit 1
fi

BUILD_CMD="$APP_DIR/mom.py $MENU_NAME"

WDIR="$HOME/.config/openbox/marchobmenu"
if [[ ! -d $WDIR ]]
then
  mkdir -p $WDIR
fi

CACHE_FILE=$WDIR/cache

# MONITORED DIRECTORIES
# .directory files
WATCHEDDIRS[0]="/usr/share/desktop-directories"
WATCHEDDIRS[1]="/usr/local/share/desktop-directories"
WATCHEDDIRS[2]="$HOME/.local/share/desktop-directories"
# .desktop files
WATCHEDDIRS[3]="/usr/share/applications"
WATCHEDDIRS[4]="/usr/local/share/applications"
WATCHEDDIRS[5]="$HOME/.local/share/applications"
# LXDE Stuff
WATCHEDDIRS[6]="/etc/xdg/menus/lxde-applications-merged"
WATCHEDDIRS[7]="$HOME/.config/menus/lxde-applications-merged"

#		/MAIN VARIABLES
#############################################


############################################
#		EXTRA VARIABLES
#--------------------------------------------
# Define variables for daemon functions
PID=$$
PIDFILE="$WDIR/$APP_DAEMON.pid"
LOGFILE="$WDIR/$APP_DAEMON.log"
#		/EXTRA VARIABLES
#############################################

#############################################
#		FUNCTIONS
#--------------------------------------------
trapFunct ()
{
  TOKILL=($(ps -C \
    "inotifywait -q -m -r --format %e %w%f -e create -e delete -e move -e modify","$APP_DAEMON" \
    -o pid= | grep -v -e "$PID" -e "^$"
  ))
  for i in ${TOKILL[@]}
  do
    checkUser=$(ps -p $i -o user= | cat)
    if [[ "$checkUser" = "$USER" && -n "$checkUser" ]]
    then
      kill -9 $i
    fi
  done
  if [[ -f "$PIDFILE" ]] ; then rm "$PIDFILE" ; fi
}

updateMenu ()
{
  $BUILD_CMD > $CACHE_FILE
}

watchFunct ()
{
  WATCH=$(for d in ${WATCHEDDIRS[@]}; do if [[ -d $d ]] ; then echo $d ; fi ; done)
  inotifywait -q -m -r --format '%e %w%f' -e create -e delete -e move -e modify $WATCH \
  | while read line
  do
    echo $line >> $LOGFILE
    updateMenu
  done
}

daemonStart ()
{
  trapFunct
  updateMenu
  nohup $0 run  >$LOGFILE 2>&1 &
  exec 3>&-
  exec 2>&-
  exec 1>&-
  exit 0
}

daemonStop ()
{
  trapFunct
}

run ()
{
  trap "trapFunct; exit" INT TERM EXIT
  echo $PID > $PIDFILE
  watchFunct
  trap - INT TERM EXIT
}

#		/FUNCTIONS
#############################################

#############################################
#		CASE
#--------------------------------------------

case $ACTION in
  start|restart)
    daemonStart
  ;;
  stop)
    daemonStop
  ;;
  run)
    run
  ;;
  update)
    updateMenu
  ;;
  *)
    echo "Usage: $APP_DAEMON [start|stop|update|run] [menu-name]"
  ;;
esac
#		/CASE
#############################################

